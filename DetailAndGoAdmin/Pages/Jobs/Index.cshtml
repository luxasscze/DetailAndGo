@page
@model DetailAndGoAdmin.Pages.Jobs.IndexModel

@{
    ViewData["Title"] = "Index";
    //Layout = "~/Pages/Shared/_Layout.cshtml";
}

<script src="~/lib/jquery/dist/jquery.min.js" asp-append-version="true"></script>
<script>
    console.log('its working...');
    function getUserName(userId) {
        console.log('user id: ' + userId);
        let userName;
        $.ajax({
            url: "?handler=GetUserFullName",
            data: { aspNetUserId: userId },
            type: "GET",
            async: false,
            cache: false,
            beforeSend: function () {

            },
            success: function (data) {
                userName = data;
            },
            error: function (error) {
                console.log(error);
            },
            complete: function () {
                console.log('finished...');
            },
        });
        console.log(userName);
        return userName;
    }

    function getServiceName(serviceId) {
        let serviceName;
        $.ajax({
            url: "?handler=GetServiceName",
            data: { serviceId: serviceId },
            type: "GET",
            async: false,
            cache: false,
            beforeSend: function () {

            },
            success: function (data) {
                serviceName = data;
            },
            error: function (error) {
                console.log(error);
            },
            complete: function () {
                console.log('finished...');
            },
        });
        return serviceName;
    }

    function getCarName(carId) {
        let carName;
        $.ajax({
            url: "?handler=GetCarName",
            data: { carId: carId },
            type: "GET",
            async: false,
            cache: false,
            beforeSend: function () {

            },
            success: function (data) {
                carName = data;
            },
            error: function (error) {
                console.log(error);
            },
            complete: function () {
                console.log('finished...');
            },
        });
        return carName;
    }

    function getPostCode(aspNetUserId) {
        let postCode;
        $.ajax({
            url: "?handler=GetPostCode",
            data: { aspNetUserId: aspNetUserId },
            type: "GET",
            async: false,
            cache: false,
            beforeSend: function () {

            },
            success: function (data) {
                postCode = data;
            },
            error: function (error) {
                console.log(error);
            },
            complete: function () {
                console.log('finished...');
            },
        });
        return postCode;
    }
</script>

<h1 style="color: #fff; text-align: center;">Bookings Awaiting Approval</h1>

<div class="row">

    @foreach (var item in Model.Bookings)
    {
        <div class="col-sm-4">
            <div class="card shadow" style="margin-top: 25px; background-color: rgba(0, 0, 0, 0.2);">
                <div class="card-header text-light">
                    <h2 id="username-@item.Id"></h2>
                </div>
                <div class="card-body text-light">
                    <div class="card bg-secondary">
                        <div class="row">
                            <div class="col-6">CREATED</div><div class="col-6 text-end">@item.Created.ToString("dd/MM/yyyy HH:mm")</div>
                        </div>
                    </div>
                    <div class="card bg-dark">
                        <div class="row">
                            <div class="col-6">BOOKED FOR</div><div class="col-6 text-end">@item.BookedFor.ToString("dd/MM/yyyy HH:mm")</div>
                        </div>
                    </div>
                    <div class="card bg-secondary">
                        <div class="row">
                            <div class="col-6">POSTCODE</div><div class="col-6 text-end"><label id="postCode-@item.Id"></label></div>
                        </div>
                    </div>

                    <div class="card bg-dark">
                        <div class="row">
                            <div class="col-6">CAR</div><div class="col-6 text-end"><label id="car-text-@item.Id"></label></div>
                        </div>
                    </div>
                    <div class="row text-center" style="margin-top: 20px; padding: 5px;">
                        @{
                            string[] list = item.ServicesArray.Split(',');
                        }
                        @foreach (var tim in list)
                        {
                            <div class="col-6" style="margin-bottom: 5px;">
                                <div class="card bg-transparent border-1 border-secondary">
                                    <label id="service-text-@item.Id-@tim"></label>
                                </div>
                            </div>
                            <script>
                                $('#service-text-@item.Id-@tim').text(getServiceName(@tim));
                            </script>
                        }
                        
                    </div>
                </div>
                <div class="card-footer">
                    <div class="row">
                        <a href="#" class="btn btn-sm btn-outline-info"><i class="fa fa-eye"></i> View</a>
                    </div>
                </div>
            </div>
        </div>
        <script>
            $('#username-@item.Id').text(getUserName('@item.AspNetUserId'));
            $('#postCode-@item.Id').text(getPostCode('@item.AspNetUserId'));
            $('#car-text-@item.Id').text(getCarName('@item.CarId'));
        </script>
    }
</div>

@{
    /*<table class="container">
                <thead>
                <tr>
                <th>
                @Html.DisplayNameFor(model => model.Jobs[0].Created)
                </th>
                <th>
                @Html.DisplayNameFor(model => model.Jobs[0].Updated)
                </th>
                <th>
                @Html.DisplayNameFor(model => model.Jobs[0].Status)
        </th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model.Jobs)
                    {
                    <tr>
                    <td>
                    @Html.DisplayFor(modelItem => item.Created)
                    </td>
                    <td>
                    @Html.DisplayFor(modelItem => item.Updated)
                    </td>
                    <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>

                <td>
                <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
    </td>

    </tr>
    }
    </tbody>
    </table>*/
}


